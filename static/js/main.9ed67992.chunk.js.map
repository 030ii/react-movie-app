{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","props","console","log","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2WAwCeA,MAnCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,qBAAKC,UAAU,QAAf,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEP,OAAMD,QAAOE,UAASC,SAAQC,WAH3C,UAME,qBAAKK,IAAKN,EAAQO,IAAKV,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,gBAAd,SACGD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBR,UAAU,eAA1B,SACGO,GADMC,QAKb,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,kBCgEKC,G,kNAnFbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,uDAYZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKhB,MAA3BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASZ,UAAU,YAAnB,SACGW,EACC,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGY,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZD,MAAOyB,EAAMzB,MACbE,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,e,GAlCRE,IAAMC,Y,MCWVC,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAK1B,UAAU,mBAAf,UACE,oIAIA,6D,MCmBS6B,MA1Bf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCiBS6B,E,uKAjBb,WACE,MAA8BX,KAAKO,MAA3BK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAAS5B,OACX6B,EAAQE,KAAK,O,oBAIjB,WACE,IAAQH,EAAaZ,KAAKO,MAAlBK,SACR,OAAIA,EAAS5B,MACJ,+BAAO4B,EAAS5B,MAAMR,QAEtB,S,GAbQ4B,IAAMC,WCYZW,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,cAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWb,IAChC,cAAC,IAAD,CAAOW,KAAK,gBAAgBE,UAAWR,QCV7CS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ed67992.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie({ title, year, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: \"/movie-detail\",\n          state: { year, title, summary, poster, genres },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"movie__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired, // 문자열 배열\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true, // 로딩중 표시\n    movies: [],\n  };\n\n  // 비동기 실행 함수 - 영화 데이터\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    ); // movies = data.data.movies\n    // const movies = myMovieData;\n    this.setState({ movies, isLoading: false }); // == movies: movies, isLoading: false\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\n// api가 막혔을 때 테스트용 데이터\nconst myMovieData = [\n  {\n    id: 1,\n    title: \"영화제목1\",\n    summary: \"영화 내용1\",\n    rating: 4.1,\n    year: 2021,\n    genres: [\"Drama\", \"Family\"],\n    medium_cover_image:\n      \"https://upload.wikimedia.org/wikipedia/ko/d/d8/%EC%9D%B8%EC%82%AC%EC%9D%B4%EB%93%9C_%EC%95%84%EC%9B%83.jpg\",\n  },\n  {\n    id: 2,\n    title: \"영화제목2\",\n    summary: \"영화 내용2\",\n    rating: 4.9,\n    year: 2021,\n    genres: [\"Drama\", \"Family\"],\n    medium_cover_image:\n      \"https://upload.wikimedia.org/wikipedia/ko/d/d8/%EC%9D%B8%EC%82%AC%EC%9D%B4%EB%93%9C_%EC%95%84%EC%9B%83.jpg\",\n  },\n  {\n    id: 3,\n    title: \"영화제목3\",\n    summary: \"영화 내용3\",\n    rating: 3.5,\n    year: 2021,\n    genres: [\"Drama\", \"Family\"],\n    medium_cover_image:\n      \"https://upload.wikimedia.org/wikipedia/ko/d/d8/%EC%9D%B8%EC%82%AC%EC%9D%B4%EB%93%9C_%EC%95%84%EC%9B%83.jpg\",\n  },\n];\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props) {\n  console.log(props);\n  return (\n    <div className=\"about__container\">\n      <span>\n        \"Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follows\n      </span>\n      <span>- George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n\n      {/* Route컴포넌트에서 props 전달하기 */}\n      {/* <Link\n        to={{\n          pathname: \"/about\",\n          state: { fromNavigation: true },\n        }}\n      >\n        About\n      </Link> */}\n\n      {/* a 태그의 href 속성은 페이지 전체를 다시 그린다 (렌더링 x) \n            => 따라서 a 태그 대신 Link 컴포넌트 활용 \n            => Link, Router 컴포넌트는 HashRouter 안에 포함되어야 한다\n        */}\n      {/* <a href=\"/\">Home</a>\n      <a href=\"/about\">About</a> */}\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\n\n// function Detail(props) {\n//   console.log(props);\n//   return <span>asdf</span>;\n// }\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props; // 컴포넌트가 마운트 되면\n    if (location.state === undefined) {\n      history.push(\"/\"); // 받아온 state값이 없을 경우 home으로 이동\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return <span>{location.state.title}</span>;\n    } else {\n      return null; // 에러없이 componentDidMount() 실행\n    }\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}